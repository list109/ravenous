{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/Autocomplete/Autocomplete.js","components/SearchBar/SearchBar.js","util/Yealp.js","components/Loading/Loading.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Business","business","this","props","imageSrc","name","address","city","state","category","rating","reviewCount","url","distance","businessMapUrl","URL","searchParams","append","className","href","target","src","alt","Math","floor","toUpperCase","React","Component","BusinessList","businesses","map","id","Autocomplete","children","options","isOpen","focusedOptionIndex","onOptionClick","onOptionPointerOver","onFocus","onUnfocus","autocompleteList","length","option","i","onClick","handleClick","onPointerOver","tabIndex","onBlur","SearchBar","sortByOptions","Nearest","handleSortByChange","sortOption","onSortByChange","handleTermChange","onTermChange","value","handleRadiusChange","onRadiusChange","handleStatusChange","onStatusChange","checked","handleLocationChange","onLocationChange","sortBy","Object","keys","sortByOption","sortByOptionValue","getSortByClass","onKeyDown","onOptionOver","term","termRef","termOptions","isTermOptionsOpen","termFocusedOptionIndex","location","locationRef","locationOptions","isLocationOptionsOpen","locationFocusedOptionIndex","isLocationInvalid","radius","onInvalid","onSubmit","renderSortByOptions","type","onChange","placeholder","ref","required","min","max","Yelp","yelpApiUrl","searchBusinesses","onlyOpened","limit","urlToFetch","getSearchUrl","search","getBusinessData","searchAutocomplete","text","autocompleteApiUrl","searchApiUrl","endsWith","slice","fetch","headers","Authorization","response","FetchError","message","ok","json","jsonResponse","errorStatus","error","code","errorMessage","description","statusText","status","image_url","categories","review_count","address1","country","zipCode","zip_code","title","join","Error","window","addEventListener","event","console","log","Loading","xmlns","width","height","viewBox","style","fill","cx","cy","r","d","App","isRequestRun","createRef","locationTimeOutId","locationSearchTimeOutId","termTimeOutId","termSearchTimeOutId","optionsLimit","handleFocus","clearTimeout","setState","getCapitalizedName","handleUnfocus","setTimeout","handleKeyDown","e","index","isOptionsOpen","getNextIndex","getPrevIndex","setOption","preventDefault","shiftKey","handleOptionClick","handleOptionOver","current","focus","isValid","checkFormValidity","handleSubmit","undefined","searchTermOptions","then","data","terms","catch","finally","searchLocationOptions","handleInvalid","searchYelp","getResponseErrorMessage","checkValidity","onlyOpend","output","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed268078.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Business.css'\r\n\r\nexport class Business extends React.Component {\r\n  render() {\r\n    const { business } = this.props\r\n    const { imageSrc, name, address, city, state, category, rating, reviewCount, url, distance } =\r\n      business\r\n\r\n    const businessMapUrl = new URL('https://www.google.com/maps/search/')\r\n    businessMapUrl.searchParams.append('api', 1)\r\n    businessMapUrl.searchParams.append('query', `${name}, ${address}, ${city}, ${state}`)\r\n\r\n    return (\r\n      <div className=\"Business\">\r\n        <a href={url} target=\"blank\">\r\n          <div className=\"image-container\">\r\n            <img src={imageSrc} alt=\"\" />\r\n          </div>\r\n        </a>\r\n        <h2>{name}</h2>\r\n        <div className=\"Business-information\">\r\n          <a href={businessMapUrl} target=\"blank\">\r\n            <div className=\"Business-address\">\r\n              <p>{address}</p>\r\n              <p>{city}</p>\r\n              <p>{state}</p>\r\n              <p>{Math.floor(distance)} m</p>\r\n            </div>\r\n          </a>\r\n          <div className=\"Business-reviews\">\r\n            <h3>{category.toUpperCase()}</h3>\r\n            <h3 className=\"rating\">{rating} stars</h3>\r\n            <p>\r\n              {reviewCount}\r\n              {reviewCount === 1 ? ' review' : ' reviews'}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport './BusinessList.css'\r\nimport { Business } from '../Business/Business'\r\n\r\nexport class BusinessList extends React.Component {\r\n  render() {\r\n    const { businesses } = this.props\r\n\r\n    return (\r\n      <div className=\"BusinessList\">\r\n        {businesses.map(business => (\r\n          <Business business={business} key={business.id} />\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport './Autocomplete.css'\r\n\r\nexport function Autocomplete({\r\n  name,\r\n  children,\r\n  options = [],\r\n  isOpen,\r\n  focusedOptionIndex,\r\n  onOptionClick,\r\n  onOptionPointerOver,\r\n  onFocus,\r\n  onUnfocus\r\n}) {\r\n  const handleClick = option => onOptionClick(name, option)\r\n  const handlePointerOver = index => onOptionPointerOver(name, index)\r\n  const handleFocus = () => onFocus(name)\r\n  const handleBlur = () => onUnfocus(name)\r\n\r\n  const autocompleteList = isOpen && options.length > 0 && (\r\n    <ul className=\"Autocomplete-list\">\r\n      {options.map((option, i) => (\r\n        <li\r\n          key={i}\r\n          className={`Autocomplete-option${focusedOptionIndex === i ? ' focus' : ''}`}\r\n          onClick={() => handleClick(option)}\r\n          onPointerOver={() => handlePointerOver(i)}\r\n          tabIndex=\"0\"\r\n        >\r\n          <p>{option}</p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n\r\n  return (\r\n    <div className=\"Autocomplete\" onFocus={handleFocus} onBlur={handleBlur}>\r\n      {children}\r\n      {autocompleteList}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport './SearchBar.css'\r\nimport { Autocomplete } from '../Autocomplete/Autocomplete'\r\n\r\nexport class SearchBar extends React.Component {\r\n  sortByOptions = {\r\n    'Best Match': 'best_match',\r\n    'Highest Rated': 'rating',\r\n    'Most Reviewed': 'review_count',\r\n    Nearest: 'distance'\r\n  }\r\n\r\n  handleSortByChange = sortOption => this.props.onSortByChange(sortOption)\r\n\r\n  handleTermChange = ({ target }) => this.props.onTermChange(target.value)\r\n\r\n  handleRadiusChange = ({ target }) => this.props.onRadiusChange(target.value)\r\n\r\n  handleStatusChange = ({ target }) => this.props.onStatusChange(target.checked)\r\n\r\n  handleLocationChange = ({ target }) => this.props.onLocationChange(target.value)\r\n\r\n  getSortByClass(sortOption) {\r\n    return sortOption === this.props.sortBy ? 'active' : ''\r\n  }\r\n\r\n  renderSortByOptions() {\r\n    return Object.keys(this.sortByOptions).map(sortByOption => {\r\n      const sortByOptionValue = this.sortByOptions[sortByOption]\r\n      return (\r\n        <li\r\n          key={sortByOptionValue}\r\n          className={this.getSortByClass(sortByOptionValue)}\r\n          onClick={() => this.handleSortByChange(sortByOptionValue)}\r\n        >\r\n          {sortByOption}\r\n        </li>\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      onFocus,\r\n      onUnfocus,\r\n      onKeyDown,\r\n      onOptionClick,\r\n      onOptionOver,\r\n      term,\r\n      termRef,\r\n      termOptions,\r\n      isTermOptionsOpen,\r\n      termFocusedOptionIndex,\r\n      location,\r\n      locationRef,\r\n      locationOptions,\r\n      isLocationOptionsOpen,\r\n      locationFocusedOptionIndex,\r\n      isLocationInvalid,\r\n      radius,\r\n      onInvalid,\r\n      onSubmit\r\n    } = this.props\r\n\r\n    return (\r\n      <form className=\"SearchBar\" onSubmit={onSubmit} onInvalid={onInvalid}>\r\n        <div className=\"SearchBar-sort-options\">\r\n          <ul>{this.renderSortByOptions()}</ul>\r\n        </div>\r\n        <div className=\"SearchBar-fields\">\r\n          <Autocomplete\r\n            name=\"term\"\r\n            options={termOptions}\r\n            isOpen={isTermOptionsOpen}\r\n            focusedOptionIndex={termFocusedOptionIndex}\r\n            onOptionClick={onOptionClick}\r\n            onOptionPointerOver={onOptionOver}\r\n            onFocus={onFocus}\r\n            onUnfocus={onUnfocus}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              name=\"term\"\r\n              value={term}\r\n              onChange={this.handleTermChange}\r\n              onKeyDown={onKeyDown}\r\n              placeholder=\"Search Businesses\"\r\n              ref={termRef}\r\n            />\r\n          </Autocomplete>\r\n          <Autocomplete\r\n            name=\"location\"\r\n            options={locationOptions}\r\n            isOpen={isLocationOptionsOpen}\r\n            focusedOptionIndex={locationFocusedOptionIndex}\r\n            onOptionClick={onOptionClick}\r\n            onOptionPointerOver={onOptionOver}\r\n            onFocus={onFocus}\r\n            onUnfocus={onUnfocus}\r\n          >\r\n            <p className={`SearchBar-location${isLocationInvalid ? ' invalid' : ''}`}>\r\n              <input\r\n                type=\"text\"\r\n                name=\"location\"\r\n                value={location}\r\n                onChange={this.handleLocationChange}\r\n                onKeyDown={onKeyDown}\r\n                placeholder=\"Where?\"\r\n                ref={locationRef}\r\n                required={true}\r\n              />\r\n            </p>\r\n          </Autocomplete>\r\n        </div>\r\n        <fieldset className=\"SearchBar-distance-options\">\r\n          <legend>Optional</legend>\r\n          <p>\r\n            <label>\r\n              <input\r\n                type=\"number\"\r\n                min=\"0\"\r\n                max=\"40000\"\r\n                value={radius}\r\n                onChange={this.handleRadiusChange}\r\n              />\r\n              Specify a radius of the search area (max 40000 m)\r\n            </label>\r\n            <label>\r\n              <input type=\"checkbox\" onChange={this.handleStatusChange} />\r\n              Consider only the businesses open now\r\n            </label>\r\n          </p>\r\n        </fieldset>\r\n        <div className=\"SearchBar-submit\">\r\n          <button type=\"submit\">Let's Go</button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n","const apiKey =\r\n  'IoNiWEe1LFoHMhPW3C23ogHi6ih5_rAJqUfjm6Px19rti1nBX8FD-plzKL9jxpQBMnQBZaSwH_z-hN9Ru1rqNV1WoaR0vC9p5ywlR7_hRahgEnBgCIXlNUTgcUzTYHYx'\r\n\r\nconst proxy = 'https://cors-proxy-list109.herokuapp.com/'\r\n\r\nexport const Yelp = {\r\n  url: {\r\n    yelpApiUrl: `https://api.yelp.com`,\r\n    get searchApiUrl() {\r\n      return `${this.yelpApiUrl}/v3/businesses/search`\r\n    },\r\n    get autocompleteApiUrl() {\r\n      return `${this.yelpApiUrl}/v3/autocomplete`\r\n    }\r\n  },\r\n\r\n  async searchBusinesses({\r\n    term = '',\r\n    location = '',\r\n    sortBy = '',\r\n    radius = '',\r\n    onlyOpened = '',\r\n    limit = ''\r\n  }) {\r\n    const urlToFetch = this.getSearchUrl({\r\n      term,\r\n      location,\r\n      sortBy,\r\n      radius,\r\n      onlyOpened,\r\n      limit\r\n    })\r\n\r\n    const { businesses = [] } = await this.search(urlToFetch)\r\n\r\n    return businesses.map(business => this.getBusinessData(business))\r\n  },\r\n\r\n  async searchAutocomplete({ text, limit }) {\r\n    const urlToFetch = `${this.url.autocompleteApiUrl}?text=${text}&limit=${limit}`\r\n\r\n    return await this.search(urlToFetch)\r\n  },\r\n\r\n  getSearchUrl({ term, location, sortBy, radius, onlyOpened, limit }) {\r\n    let url = `${this.url.searchApiUrl}?`\r\n\r\n    url = term ? `${url}term=${term}&` : url\r\n    url = location ? `${url}location=${location}&` : url\r\n    url = sortBy ? `${url}sort_by=${sortBy}&` : url\r\n    url = radius ? `${url}radius=${radius}&` : url\r\n    url = onlyOpened ? `${url}open_now=${onlyOpened}&` : url\r\n    url = limit ? `${url}limit=${limit}&` : url\r\n\r\n    return url.endsWith('&') ? url.slice(0, -1) : url\r\n  },\r\n\r\n  async search(urlToFetch) {\r\n    let response\r\n\r\n    try {\r\n      response = await fetch(proxy + urlToFetch, {\r\n        headers: {\r\n          Authorization: `Bearer ${apiKey}`\r\n        }\r\n      })\r\n    } catch (error) {\r\n      throw new FetchError({ message: 'Network error has occured. Try again or later.' })\r\n    }\r\n\r\n    if (!response.ok) {\r\n      let jsonResponse\r\n\r\n      try {\r\n        jsonResponse = await response.json()\r\n      } catch {}\r\n\r\n      const errorStatus = jsonResponse.error?.code\r\n      let errorMessage = jsonResponse.error?.description || response.statusText\r\n\r\n      throw new FetchError({ status: errorStatus, message: errorMessage })\r\n    }\r\n\r\n    try {\r\n      return await response.json()\r\n    } catch {\r\n      throw new FetchError({\r\n        message: 'Some error has occured on the server. Please, try again or later.'\r\n      })\r\n    }\r\n  },\r\n\r\n  getBusinessData({\r\n    id,\r\n    image_url: imageSrc = '',\r\n    name,\r\n    location,\r\n    categories,\r\n    rating,\r\n    review_count: reviewCount,\r\n    url,\r\n    distance\r\n  }) {\r\n    const { address1: address, city, state, country, zip_code: zipCode } = location\r\n    const category = categories.map(({ title }) => title).join(', ')\r\n\r\n    return {\r\n      id,\r\n      imageSrc,\r\n      name,\r\n      address,\r\n      city,\r\n      state,\r\n      country,\r\n      zipCode,\r\n      category,\r\n      rating,\r\n      reviewCount,\r\n      url,\r\n      distance\r\n    }\r\n  }\r\n}\r\n\r\nclass FetchError extends Error {\r\n  constructor({ status, message }) {\r\n    super(message)\r\n    this.status = status\r\n  }\r\n}\r\n\r\n// handle uncaught failed fetch through\r\nwindow.addEventListener('unhandledrejection', event => {\r\n  console.log(event.message)\r\n})\r\n","import React from 'react'\r\nimport './Loading.css'\r\n\r\nexport const Loading = (\r\n  <div className={'Loading-icon'}>\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width={100} height={100} viewBox=\"0 0 496 496\">\r\n      <g>\r\n        <circle style={{ fill: '#383A39' }} cx=\"248\" cy=\"24\" r=\"24\" />\r\n        <circle style={{ fill: '#ECEEEE' }} cx=\"248\" cy=\"472\" r=\"24\" />\r\n        <circle style={{ fill: '#77807F' }} cx=\"136\" cy=\"53.6\" r=\"24\" />\r\n        <path\r\n          style={{ fill: '#F2F4F4' }}\r\n          d=\"M380.8,430.4c6.4,11.2,2.4,25.6-8.8,32.8c-11.2,6.4-25.6,2.4-32.8-8.8c-6.4-11.2-2.4-25.6,8.8-32.8\r\n    \tC359.2,415.2,374.4,419.2,380.8,430.4z\"\r\n        />\r\n        <path\r\n          style={{ fill: '#9FAAA9' }}\r\n          d=\"M65.6,115.2c11.2,6.4,15.2,20.8,8.8,32.8c-6.4,11.2-20.8,15.2-32.8,8.8c-11.2-6.4-15.2-20.8-8.8-32.8\r\n    \tS54.4,108.8,65.6,115.2z\"\r\n        />\r\n        <path\r\n          style={{ fill: '#F2F7F7' }}\r\n          d=\"M454.4,339.2c11.2,6.4,15.2,20.8,8.8,32.8c-6.4,11.2-20.8,15.2-32.8,8.8\r\n    \tc-11.2-6.4-15.2-20.8-8.8-32.8C428,336.8,442.4,332.8,454.4,339.2z\"\r\n        />\r\n        <circle style={{ fill: '#B2BBBA' }} cx=\"24\" cy=\"248\" r=\"24\" />\r\n        <circle style={{ fill: '#FFFFFF' }} cx=\"472\" cy=\"248\" r=\"24\" />\r\n        <path\r\n          style={{ fill: '#C5CCCB' }}\r\n          d=\"M41.6,339.2c11.2-6.4,25.6-2.4,32.8,8.8c6.4,11.2,2.4,25.6-8.8,32.8c-11.2,6.4-25.6,2.4-32.8-8.8\r\n    \tS30.4,346.4,41.6,339.2z\"\r\n        />\r\n        <path\r\n          d=\"M430.4,115.2c11.2-6.4,25.6-2.4,32.8,8.8c6.4,11.2,2.4,25.6-8.8,32.8c-11.2,6.4-25.6,2.4-32.8-8.8\r\n    \tC415.2,136.8,419.2,121.6,430.4,115.2z\"\r\n        />\r\n        <path\r\n          style={{ fill: '#D9DDDD' }}\r\n          d=\"M115.2,430.4c6.4-11.2,20.8-15.2,32.8-8.8c11.2,6.4,15.2,20.8,8.8,32.8c-6.4,11.2-20.8,15.2-32.8,8.8\r\n    \tC112.8,456,108.8,441.6,115.2,430.4z\"\r\n        />\r\n        <path\r\n          style={{ fill: '#111111' }}\r\n          d=\"M339.2,41.6c6.4-11.2,20.8-15.2,32.8-8.8c11.2,6.4,15.2,20.8,8.8,32.8c-6.4,11.2-20.8,15.2-32.8,8.8\r\n    \tC336.8,68,332.8,53.6,339.2,41.6z\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  </div>\r\n)\r\n","import React from 'react'\r\nimport './App.css'\r\nimport { BusinessList } from '../BusinessList/BusinessList'\r\nimport { SearchBar } from '../SearchBar/SearchBar'\r\nimport { Yelp } from '../../util/Yealp'\r\nimport { Loading } from '../Loading/Loading'\r\n\r\nexport class App extends React.Component {\r\n  state = {\r\n    businesses: [],\r\n    //  errorMessage is eveluated every time once a try to make a main request is initiated. if the response of a main request is successful, then resetting to an empty value occurs\r\n    errorMessage: 'Start with a location value. The rest is optional.',\r\n    isRequestRun: false,\r\n\r\n    sortBy: 'best_match',\r\n    radius: '',\r\n    onlyOpened: false,\r\n\r\n    term: '',\r\n    termOptions: [],\r\n    isTermOptionsOpen: false,\r\n    termFocusedOptionIndex: 0,\r\n\r\n    location: '',\r\n    isLocationInvalid: false,\r\n    locationOptions: [],\r\n    isLocationOptionsOpen: false,\r\n    locationFocusedOptionIndex: 0\r\n  }\r\n\r\n  locationRef = React.createRef()\r\n  locationTimeOutId = null\r\n  locationSearchTimeOutId = null\r\n\r\n  termRef = React.createRef()\r\n  termTimeOutId = null\r\n  termSearchTimeOutId = null\r\n\r\n  optionsLimit = 5\r\n\r\n  handleFocus = name => {\r\n    clearTimeout(this[`${name}TimeOutId`])\r\n\r\n    this.setState({\r\n      [`is${this.getCapitalizedName(name)}OptionsOpen`]: true\r\n    })\r\n  }\r\n\r\n  handleUnfocus = name => {\r\n    this[`${name}TimeOutId`] = setTimeout(() => {\r\n      this.setState({\r\n        [`is${this.getCapitalizedName(name)}OptionsOpen`]: false\r\n      })\r\n    })\r\n  }\r\n\r\n  getCapitalizedName = name => name[0].toUpperCase() + name.slice(1)\r\n\r\n  handleKeyDown = e => {\r\n    const { name } = e.target\r\n    const options = this.state[`${name}Options`]\r\n    const index = this.state[`${name}FocusedOptionIndex`]\r\n    const isOptionsOpen = this.state[`is${this.getCapitalizedName(name)}OptionsOpen`]\r\n\r\n    const getNextIndex = index => (index + 1 === options.length ? 0 : index + 1)\r\n    const getPrevIndex = index => (index - 1 < 0 ? options.length - 1 : index - 1)\r\n\r\n    switch (e.code) {\r\n      case 'Enter':\r\n        if (options.length === 0) return\r\n        this.setOption(name, options[index])\r\n        e.preventDefault()\r\n        break\r\n      case 'ArrowUp':\r\n        this.setState({\r\n          [`${name}FocusedOptionIndex`]: getPrevIndex(index)\r\n        })\r\n        e.preventDefault()\r\n        break\r\n      case 'ArrowDown':\r\n        this.setState({\r\n          [`${name}FocusedOptionIndex`]: getNextIndex(index)\r\n        })\r\n        e.preventDefault()\r\n        break\r\n      case 'Tab':\r\n        if (options.length === 0 || isOptionsOpen === false) return\r\n        this.setState({\r\n          [`${name}FocusedOptionIndex`]: e.shiftKey ? getPrevIndex(index) : getNextIndex(index)\r\n        })\r\n        e.preventDefault()\r\n        break\r\n      case 'Escape':\r\n        this.setState({\r\n          [`is${this.getCapitalizedName(name)}OptionsOpen`]: false\r\n        })\r\n        break\r\n      default:\r\n        return ''\r\n    }\r\n  }\r\n\r\n  handleOptionClick = (name, option) => {\r\n    this.setOption(name, option)\r\n  }\r\n\r\n  handleOptionOver = (name, index) => {\r\n    this.setState({\r\n      [`${name}FocusedOptionIndex`]: index\r\n    })\r\n  }\r\n\r\n  setOption = (name, option) => {\r\n    this.setState({\r\n      [name]: option,\r\n      [`${name}Options`]: [],\r\n      [`${name}FocusedOptionIndex`]: 0\r\n    })\r\n    this[`${name}Ref`].current.focus()\r\n  }\r\n\r\n  handleSortByChange = sortOption => {\r\n    const isValid = this.checkFormValidity()\r\n    this.setState({ sortBy: sortOption }, isValid ? this.handleSubmit : undefined)\r\n  }\r\n\r\n  handleTermChange = value => {\r\n    this.setState({\r\n      term: value,\r\n      termOptions: [value, ...this.state.termOptions.slice(1)]\r\n    })\r\n\r\n    clearTimeout(this.termSearchTimeOutId)\r\n\r\n    if (value === '') {\r\n      this.setState({\r\n        termOptions: [],\r\n        termFocusedOptionIndex: 0\r\n      })\r\n      return\r\n    }\r\n\r\n    this.termSearchTimeOutId = setTimeout(\r\n      () => this.searchTermOptions({ text: value, limit: this.optionsLimit }),\r\n      700\r\n    )\r\n  }\r\n\r\n  searchTermOptions = ({ text, limit }) => {\r\n    Yelp.searchAutocomplete({ text, limit })\r\n      .then(data => {\r\n        const terms = data?.terms.map(({ text }) => text)\r\n\r\n        // if (this.state.term === text && this.state.isRequestRun === false) {\r\n        if (this.state.term === text) {\r\n          this.setState({\r\n            termOptions: [this.state.term, ...terms]\r\n            // isTermOptionsOpen: document.activeElement === this.termRef.current\r\n          })\r\n        }\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          termOptions: this.state.term ? [this.state.term] : []\r\n        })\r\n      })\r\n      .finally(() => {\r\n        this.setState(({ termOptions, termFocusedOptionIndex }) => ({\r\n          termFocusedOptionIndex: Math.min(termOptions.length - 1, termFocusedOptionIndex)\r\n        }))\r\n      })\r\n  }\r\n\r\n  handleRadiusChange = value => {\r\n    if (value > 40000) return\r\n\r\n    this.setState({\r\n      radius: value\r\n    })\r\n  }\r\n\r\n  handleStatusChange = value => {\r\n    this.setState({\r\n      onlyOpened: value\r\n    })\r\n  }\r\n\r\n  handleLocationChange = value => {\r\n    this.setState({\r\n      location: value,\r\n      locationOptions: [value, ...this.state.locationOptions.slice(1)],\r\n      isLocationInvalid: false\r\n    })\r\n\r\n    clearTimeout(this.locationSearchTimeOutId)\r\n\r\n    if (value === '') {\r\n      this.setState({\r\n        locationOptions: [],\r\n        locationFocusedOptionIndex: 0\r\n      })\r\n      return\r\n    }\r\n\r\n    this.locationSearchTimeOutId = setTimeout(\r\n      () => this.searchLocationOptions({ location: value, limit: this.optionsLimit }),\r\n      700\r\n    )\r\n  }\r\n\r\n  searchLocationOptions = ({ location, limit }) => {\r\n    Yelp.searchBusinesses({ location, limit })\r\n      .then(businesses => {\r\n        const options = businesses.map(({ address, city, state, country }) => {\r\n          return `${address}${city && `, ${city}`}${state && `, ${state}`} ${\r\n            country && `, ${country}`\r\n          }`\r\n        })\r\n\r\n        // if (this.state.location === location && this.state.isRequestRun === false) {\r\n        if (this.state.location === location) {\r\n          this.setState({\r\n            locationOptions: [this.state.location, ...options]\r\n            // isLocationOptionsOpen: document.activeElement === this.locationRef.current\r\n          })\r\n        }\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          locationOptions: this.state.location ? [this.state.location] : []\r\n        })\r\n      })\r\n      .finally(() => {\r\n        this.setState(({ locationOptions, locationFocusedOptionIndex }) => ({\r\n          locationFocusedOptionIndex: Math.min(\r\n            locationOptions.length - 1,\r\n            locationFocusedOptionIndex\r\n          )\r\n        }))\r\n      })\r\n  }\r\n\r\n  checkFormValidity() {\r\n    return this.locationRef.current.checkValidity()\r\n  }\r\n  // 1. client-side validation\r\n  handleInvalid = e => {\r\n    e.preventDefault()\r\n\r\n    this.setState({\r\n      isLocationInvalid: true,\r\n      errorMessage: 'Please, fill the location field in'\r\n    })\r\n  }\r\n  // 2. submiting if no constrains validation have been found unless the invalid value is already was checked and set before\r\n  handleSubmit = e => {\r\n    e?.preventDefault()\r\n    if (this.state.isLocationInvalid) return\r\n\r\n    // this.setState({ locationOptions: [] })\r\n\r\n    const { sortBy, term, location, radius, onlyOpened } = this.state\r\n    this.searchYelp({ sortBy, term, location, radius, onlyOpened })\r\n  }\r\n  // 3. post-server client-side validation is applied on a response\r\n  searchYelp = ({ term, location, sortBy, radius, onlyOpened }) => {\r\n    if (this.state.isRequestRun) return\r\n    this.setState({\r\n      isRequestRun: true,\r\n      businesses: []\r\n    })\r\n\r\n    Yelp.searchBusinesses({ term, location, sortBy, radius, onlyOpened })\r\n      .then(businesses => {\r\n        this.setState({\r\n          businesses,\r\n          errorMessage: businesses.length\r\n            ? ''\r\n            : this.getResponseErrorMessage({ status: 'NO_RESULTS' })\r\n        })\r\n      })\r\n      // server-side validation\r\n      .catch(({ status, message }) => {\r\n        this.setState({\r\n          errorMessage: this.getResponseErrorMessage({ status, message }),\r\n          isLocationInvalid: status === 'LOCATION_NOT_FOUND'\r\n        })\r\n      })\r\n      .finally(() => this.setState({ isRequestRun: false }))\r\n  }\r\n\r\n  getResponseErrorMessage({ status, message = 'Something went wrong, please try again' }) {\r\n    switch (status) {\r\n      case 'LOCATION_NOT_FOUND':\r\n        return 'Please, try changing the location'\r\n      case 'NO_RESULTS':\r\n        return 'There are no results on the current options set. Change some of them and try again.'\r\n      default:\r\n        return message\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      businesses,\r\n      errorMessage,\r\n      isRequestRun,\r\n      sortBy,\r\n      term,\r\n      termOptions,\r\n      isTermOptionsOpen,\r\n      termFocusedOptionIndex,\r\n      radius,\r\n      onlyOpend,\r\n      location,\r\n      locationOptions,\r\n      isLocationOptionsOpen,\r\n      locationFocusedOptionIndex\r\n    } = this.state\r\n\r\n    const output = errorMessage ? (\r\n      <p className=\"error-message\">{errorMessage}</p>\r\n    ) : (\r\n      <BusinessList businesses={businesses} />\r\n    )\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>ravenous</h1>\r\n        <SearchBar\r\n          onFocus={this.handleFocus}\r\n          onUnfocus={this.handleUnfocus}\r\n          onKeyDown={this.handleKeyDown}\r\n          onOptionOver={this.handleOptionOver}\r\n          onOptionClick={this.handleOptionClick}\r\n          sortBy={sortBy}\r\n          onSortByChange={this.handleSortByChange}\r\n          term={term}\r\n          termRef={this.termRef}\r\n          termOptions={termOptions}\r\n          isTermOptionsOpen={isTermOptionsOpen}\r\n          termFocusedOptionIndex={termFocusedOptionIndex}\r\n          onTermChange={this.handleTermChange}\r\n          radius={radius}\r\n          onRadiusChange={this.handleRadiusChange}\r\n          onlyOpend={onlyOpend}\r\n          onStatusChange={this.handleStatusChange}\r\n          location={location}\r\n          locationRef={this.locationRef}\r\n          locationOptions={locationOptions}\r\n          isLocationOptionsOpen={isLocationOptionsOpen}\r\n          locationFocusedOptionIndex={locationFocusedOptionIndex}\r\n          onLocationChange={this.handleLocationChange}\r\n          isLocationInvalid={this.state.isLocationInvalid}\r\n          onInvalid={this.handleInvalid}\r\n          onSubmit={this.handleSubmit}\r\n        />\r\n        {isRequestRun ? Loading : output}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { App } from './components/App/App.js'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}